files:
    "/usr/local/bin/check_leader_only_instance.sh":
        mode: "000755"
        owner: root
        group: root
        content: |
            #!/bin/bash
            INSTANCE_ID=`curl http://169.254.169.254/latest/meta-data/instance-id 2>/dev/null`
            REGION=`curl -s http://169.254.169.254/latest/dynamic/instance-identity/document 2>/dev/null | jq -r .region`

            # Find the Auto Scaling Group name from the Elastic Beanstalk environment
            ASG=`aws ec2 describe-tags --filters "Name=resource-id,Values=$INSTANCE_ID" \
                --region $REGION --output json | jq -r '.[][] | select(.Key=="aws:autoscaling:groupName") | .Value'`

            # Find the first instance in the Auto Scaling Group
            FIRST=`aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names $ASG \
                --region $REGION --output json | \
                jq -r '.AutoScalingGroups[].Instances[] | select(.LifecycleState=="InService") | .InstanceId' | sort | head -1`

            # If the instance ids are the same exit 0
            [ "$FIRST" = "$INSTANCE_ID" ]

    "/usr/local/bin/my_cron_script.sh":
        mode: "000755"
        owner: root
        group: root
        content: |
            #!/bin/bash
            /usr/local/bin/check_leader_only_instance.sh || exit
            source /opt/python/run/venv/bin/activate
            source /opt/python/current/env
            cd /opt/python/current/app
            send.py

    "/etc/cron.d/daily_cron":
        mode: "000644"
        owner: root
        group: root
        content: |
            * * * * * root /usr/local/bin/my_cron_script.sh

commands:
  rm_old_cron:
    command: "rm -fr /etc/cron.d/*.bak"
    ignoreErrors: true